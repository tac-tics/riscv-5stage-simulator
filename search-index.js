var N = null;var searchIndex = {};
searchIndex["riscv_5stage_simulator"]={"doc":"Simulator components for RISC-V 32I instruction set.","items":[[0,"alu","riscv_5stage_simulator","Arithmetic logic unit.",N,N],[4,"AluOp","riscv_5stage_simulator::alu","Available ALU operations.",N,N],[13,"Add","","",0,N],[13,"Sub","","",0,N],[13,"And","","",0,N],[13,"Or","","",0,N],[13,"Xor","","",0,N],[13,"SetOnLessThan","","",0,N],[13,"SetOnLessThanUnsigned","","",0,N],[13,"ShiftLeft","","",0,N],[13,"ShiftRightLogical","","",0,N],[13,"ShiftRightArithmetic","","",0,N],[13,"BranchOnEqual","","",0,N],[13,"BranchOnNotEqual","","",0,N],[13,"BranchOnLessThan","","",0,N],[13,"BranchOnLessThanUnsigned","","",0,N],[13,"BranchOnGreaterOrEqual","","",0,N],[13,"BranchOnGreaterOrEqualUnsigned","","",0,N],[4,"AluSrc","","Selector for ALU `src2` source.",N,N],[13,"Reg","","",1,N],[13,"Imm","","",1,N],[5,"alu","","Perform one ALU operation.",N,[[["instruction"],["i32"],["i32"],["u64"]],["i32"]]],[0,"ca_simulator","riscv_5stage_simulator","Cycle accurate 5-stage pipelining RISC-V 32I simulator.",N,N],[5,"run","riscv_5stage_simulator::ca_simulator","Runs a cycle accurate RISC-V 32I simulator.",N,[[["instructionmemory"],["datamemory"],["registerfile"]],["usize"]]],[0,"consts","riscv_5stage_simulator","Global constants",N,N],[17,"HALT","riscv_5stage_simulator::consts","Special simulator-only instruction signal to halt simulator.",N,N],[17,"WORD_SIZE","","Sizes in bytes.",N,N],[17,"HALFWORD_SIZE","","",N,N],[17,"BYTE_SIZE","","",N,N],[17,"NOP","","A canonical RISC-V NOP, encoded as ADDI x0, x0, 0.",N,N],[17,"FUNCT7_MASK","","",N,N],[17,"FUNCT3_MASK","","",N,N],[17,"RS1_MASK","","",N,N],[17,"RS2_MASK","","",N,N],[17,"RD_MASK","","",N,N],[17,"OPCODE_MASK","","",N,N],[17,"BIT30_MASK","","",N,N],[17,"FUNCT7_SHIFT","","",N,N],[17,"FUNCT3_SHIFT","","",N,N],[17,"RS1_SHIFT","","",N,N],[17,"RS2_SHIFT","","",N,N],[17,"RD_SHIFT","","",N,N],[17,"BIT30_SHIFT","","",N,N],[0,"hazards","riscv_5stage_simulator","Data hazard detection.",N,N],[5,"ex_hazard_src1","riscv_5stage_simulator::hazards","Indicates ALU src1 should be forwarded from the previous ALU result.",N,[[["pipeline"]],["bool"]]],[5,"ex_hazard_src2","","Indicates ALU src2 should be forwarded from the previous ALU result.",N,[[["pipeline"]],["bool"]]],[5,"mem_hazard_src1","","Indicates ALU src1 should be forwarded from data memory or earlier result.",N,[[["pipeline"]],["bool"]]],[5,"mem_hazard_src2","","Indicates ALU src2 should be forwarded from data memory or earlier result.",N,[[["pipeline"]],["bool"]]],[5,"load_hazard","","Indicates a load-use hazard that will require a pipeline stall.",N,[[["pipeline"]],["bool"]]],[5,"reg_hazard_src1","","Indicates src1 register was just written to and should be forwarded.",N,[[["instruction"],["pipeline"]],["bool"]]],[5,"reg_hazard_src2","","Indicates src2 register was just written to and should be forwarded.",N,[[["instruction"],["pipeline"]],["bool"]]],[0,"immediates","riscv_5stage_simulator","Sign extend immediate value.",N,N],[5,"gen","riscv_5stage_simulator::immediates","Sign extend immediate value.",N,[[["instruction"]],["option",["u32"]]]],[0,"ia_simulator","riscv_5stage_simulator","Single cycle instruction accurate RISC-V 32I simulator.",N,N],[5,"run","riscv_5stage_simulator::ia_simulator","Runs a single cycle instruction accurate RISC-V 32I simulator.",N,[[["instructionmemory"],["datamemory"],["registerfile"]],["usize"]]],[0,"instruction","riscv_5stage_simulator","Instruction decode stage.",N,N],[3,"Instruction","riscv_5stage_simulator::instruction","A single machine instruction.",N,N],[12,"opcode","","Category of the instruction, e.g., load, branch, or op",2,N],[12,"format","","Format associated with the opcode, e.g., R-type or I-type",2,N],[12,"fields","","Struct for accessing the subfields' bits",2,N],[12,"function","","Instruction's mnemonic, e.g., JAL, XOR, or SRA",2,N],[12,"semantics","","Control unit semantics (dictates control lines to be {de}asserted)",2,N],[3,"Fields","","RISC-V 32I fields (shamt -> imm).",N,N],[12,"rs1","","",3,N],[12,"rs2","","",3,N],[12,"rd","","",3,N],[12,"funct3","","",3,N],[12,"funct7","","",3,N],[12,"imm","","",3,N],[12,"opcode","","",3,N],[3,"Semantics","","Control unit semantics",N,N],[12,"branch","","",4,N],[12,"mem_read","","",4,N],[12,"mem_to_reg","","",4,N],[12,"alu_op","","",4,N],[12,"mem_write","","",4,N],[12,"alu_src","","",4,N],[12,"reg_write","","",4,N],[12,"mem_size","","",4,N],[4,"Opcode","","RISC-V 32I opcodes.",N,N],[13,"Lui","","",5,N],[13,"AuiPc","","",5,N],[13,"Jal","","",5,N],[13,"Jalr","","",5,N],[13,"Branch","","",5,N],[13,"Load","","",5,N],[13,"Store","","",5,N],[13,"Op","","",5,N],[13,"OpImm","","",5,N],[13,"Halt","","",5,N],[4,"Format","","RISC-V 32I instruction formats.",N,N],[13,"R","","",6,N],[13,"I","","",6,N],[13,"S","","",6,N],[13,"B","","",6,N],[13,"U","","",6,N],[13,"J","","",6,N],[4,"Function","","RISC-V 32I mnemonics.",N,N],[13,"Lui","","Load upper immediate",7,N],[13,"AuiPc","","Add upper immediate to PC",7,N],[13,"Jal","","Jump and link",7,N],[13,"Jalr","","Jump and link register",7,N],[13,"Beq","","Branch if equal",7,N],[13,"Bne","","Branch if not equal",7,N],[13,"Blt","","Branch if less than",7,N],[13,"Bge","","Branch if greater or equal",7,N],[13,"Bltu","","Branch if less than (unsigned)",7,N],[13,"Bgeu","","Branch if greater or equal (unsigned)",7,N],[13,"Lb","","Load byte",7,N],[13,"Lh","","Load halfword",7,N],[13,"Lw","","Load word",7,N],[13,"Lbu","","Load byte (unsigned)",7,N],[13,"Lhu","","Load halfword (unsigned)",7,N],[13,"Sb","","Store byte",7,N],[13,"Sh","","Store halfword",7,N],[13,"Sw","","Store word",7,N],[13,"Addi","","Add immediate",7,N],[13,"Slti","","Set less than immediate",7,N],[13,"Sltiu","","Set less than immediate (unsigned)",7,N],[13,"Xori","","Exclusive or immediate",7,N],[13,"Ori","","Logical Or immediate",7,N],[13,"Andi","","Logical And immediate",7,N],[13,"Slli","","Shift left logical immediate",7,N],[13,"Srli","","Shift right logical immediate",7,N],[13,"Srai","","Shift right arithmetic immediate",7,N],[13,"Add","","Add",7,N],[13,"Sub","","Subtract",7,N],[13,"Sll","","Shift left logical",7,N],[13,"Slt","","Set less than",7,N],[13,"Sltu","","Set less than unsigned",7,N],[13,"Xor","","Exclusive or",7,N],[13,"Srl","","Shift right logical",7,N],[13,"Sra","","Shift right arithmetic",7,N],[13,"Or","","Logical Or",7,N],[13,"And","","Logical And",7,N],[13,"Halt","","Halt simulator",7,N],[0,"decoder","","Decodes RISC-V 32I instructions.",N,N],[5,"decode","riscv_5stage_simulator::instruction::decoder","Decodes RISC-V 32I instructions.",N,[[["instruction"]]]],[11,"new","riscv_5stage_simulator::instruction","Constructs a new `Instruction`.",2,[[["u32"]],["instruction"]]],[11,"as_u32","","Returns the original instruction integer.",2,[[["self"]],["u32"]]],[0,"memory","riscv_5stage_simulator","Harvard architecture (separate instruction and data) memory interface.",N,N],[0,"data","riscv_5stage_simulator::memory","A read-write data memory.",N,N],[3,"DataMemory","riscv_5stage_simulator::memory::data","A read-write data memory.",N,N],[11,"new","","Constructs a new `DataMemory`.",8,[[["usize"]],["datamemory"]]],[11,"read","","Reads `size` (1, 2, or 4) bytes from memory.",8,[[["self"],["usize"],["usize"]],["u32"]]],[11,"write","","Writes the lower `size` (1, 2, or 4) bytes of `data` to memory.",8,[[["self"],["usize"],["usize"],["u32"]]]],[0,"instruction","riscv_5stage_simulator::memory","Read-only instruction memory.",N,N],[3,"DisassemblyInstructionMemory","riscv_5stage_simulator::memory::instruction","Instruction memory that populates memory from disassembler output.",N,N],[3,"TestInstructionMemory","","",N,N],[8,"InstructionMemory","","A read-only instruction memory trait.",N,N],[10,"read","","",9,[[["self"],["usize"]],["u32"]]],[11,"new","","Constructs a new `DisassemblyInstructionMemory`.",10,[[["file"]],["disassemblyinstructionmemory"]]],[11,"new","","",11,[[["vec",["u32"]]],["testinstructionmemory"]]],[0,"pipeline","riscv_5stage_simulator","Pipeline definition.",N,N],[3,"Pipeline","riscv_5stage_simulator::pipeline","Pipeline holding four inter-stage registers",N,N],[12,"if_id","","",12,N],[12,"id_ex","","",12,N],[12,"ex_mem","","",12,N],[12,"mem_wb","","",12,N],[3,"IfIdRegister","","Pipeline register between instruction fetch and instruction decode stages.",N,N],[12,"pc","","Program Counter",13,N],[12,"raw_insn","","Raw instruction",13,N],[3,"IdExRegister","","Pipeline register between instruction decode and execution stages.",N,N],[12,"pc","","",14,N],[12,"insn","","",14,N],[12,"rs1","","",14,N],[12,"rs2","","",14,N],[3,"ExMemRegister","","Pipeline register between execution and memory stages.",N,N],[12,"pc","","",15,N],[12,"insn","","",15,N],[12,"alu_result","","",15,N],[12,"rs2","","",15,N],[12,"halt_addr","","",15,N],[3,"MemWbRegister","","Pipeline register between memory and writeback stages.",N,N],[12,"pc","","",16,N],[12,"insn","","",16,N],[12,"alu_result","","",16,N],[12,"mem_result","","",16,N],[0,"stages","","Five stage instruction execution with pipeline control.",N,N],[5,"insn_fetch","riscv_5stage_simulator::pipeline::stages","IF: Instruction fetch from memory.",N,[[["pipeline"],["instructionmemory"],["registerfile"],["u64"]]]],[5,"insn_decode","","ID: Instruction decode and register read",N,[[["pipeline"],["pipeline"],["registerfile"],["u64"]]]],[5,"execute","","EX: Execute operation or calculate address.",N,[[["pipeline"],["pipeline"],["u64"]]]],[5,"access_memory","","MEM: Access memory operand.",N,[[["pipeline"],["pipeline"],["datamemory"],["registerfile"],["u64"]]]],[5,"reg_writeback","","WB: Write result back to register.",N,[[["pipeline"],["registerfile"],["u64"]]]],[11,"new","riscv_5stage_simulator::pipeline","",12,[[],["pipeline"]]],[11,"new","","",13,[[],["ifidregister"]]],[11,"new","","",14,[[],["idexregister"]]],[11,"new","","",15,[[],["exmemregister"]]],[11,"new","","",16,[[],["memwbregister"]]],[0,"register","riscv_5stage_simulator","32-bit register and RV32I register file.",N,N],[3,"RegisterFile","riscv_5stage_simulator::register","A complete RV32I register file.",N,N],[12,"pc","","",17,N],[12,"gpr","","",17,N],[3,"Register","","A write-protectable register.",N,N],[11,"new","","Constructs a new `RegisterFile`.",17,[[["u32"]],["registerfile"]]],[11,"new","","Constructs a new `Register`.",18,[[["u32"],["bool"]],["register"]]],[11,"read","","Reads the register's value.",18,[[["self"]],["u32"]]],[11,"write","","Writes `value` to the register if it's writable, otherwise no effect.",18,[[["self"],["u32"]]]],[0,"stages","riscv_5stage_simulator","5-stage instruction execution.",N,N],[5,"insn_fetch","riscv_5stage_simulator::stages","IF: Instruction fetch from memory.",N,[[["instructionmemory"],["u32"],["u64"]],["u32"]]],[5,"insn_decode","","ID 1: Instruction decode",N,[[["u32"],["u64"]],["instruction"]]],[5,"reg_read","","ID 2: Register read",N,N],[5,"execute","","EX: Execute operation or calculate address.",N,[[["instruction"],["i32"],["i32"],["u64"]],["i32"]]],[5,"access_memory","","MEM: Access memory operand.",N,[[["instruction"],["datamemory"],["i32"],["i32"],["u64"]],["u32"]]],[5,"reg_writeback","","WB: Write result back to register.",N,[[["u32"],["instruction"],["registerfile"],["i32"],["u32"],["u64"]]]],[11,"into","riscv_5stage_simulator::alu","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","riscv_5stage_simulator::instruction","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","riscv_5stage_simulator::memory::data","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","riscv_5stage_simulator::memory::instruction","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","riscv_5stage_simulator::pipeline","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","riscv_5stage_simulator::register","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"read","riscv_5stage_simulator::memory::instruction","Reads an instruction from `InstructionMemory`.",10,[[["self"],["usize"]],["u32"]]],[11,"read","","Reads an instruction from `InstructionMemory`.",11,[[["self"],["usize"]],["u32"]]],[11,"default","riscv_5stage_simulator::alu","",0,[[],["aluop"]]],[11,"default","","",1,[[],["alusrc"]]],[11,"default","riscv_5stage_simulator::instruction","Constructs a canonical NOP encoded as ADDI x0, x0, 0.",2,[[],["instruction"]]],[11,"default","","",3,[[],["fields"]]],[11,"default","","",4,[[],["semantics"]]],[11,"eq","riscv_5stage_simulator::alu","",0,[[["self"],["aluop"]],["bool"]]],[11,"eq","","",1,[[["self"],["alusrc"]],["bool"]]],[11,"eq","riscv_5stage_simulator::instruction","",3,[[["self"],["fields"]],["bool"]]],[11,"ne","","",3,[[["self"],["fields"]],["bool"]]],[11,"eq","","",5,[[["self"],["opcode"]],["bool"]]],[11,"eq","","",6,[[["self"],["format"]],["bool"]]],[11,"eq","","",7,[[["self"],["function"]],["bool"]]],[11,"clone","riscv_5stage_simulator::alu","",0,[[["self"]],["aluop"]]],[11,"clone","","",1,[[["self"]],["alusrc"]]],[11,"clone","riscv_5stage_simulator::instruction","",2,[[["self"]],["instruction"]]],[11,"clone","","",3,[[["self"]],["fields"]]],[11,"clone","","",5,[[["self"]],["opcode"]]],[11,"clone","","",6,[[["self"]],["format"]]],[11,"clone","","",7,[[["self"]],["function"]]],[11,"clone","","",4,[[["self"]],["semantics"]]],[11,"clone","riscv_5stage_simulator::pipeline","",12,[[["self"]],["pipeline"]]],[11,"clone","","",13,[[["self"]],["ifidregister"]]],[11,"clone","","",14,[[["self"]],["idexregister"]]],[11,"clone","","",15,[[["self"]],["exmemregister"]]],[11,"clone","","",16,[[["self"]],["memwbregister"]]],[11,"clone","riscv_5stage_simulator::register","",18,[[["self"]],["register"]]],[11,"fmt","riscv_5stage_simulator::alu","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","riscv_5stage_simulator::instruction","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","riscv_5stage_simulator::pipeline","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","riscv_5stage_simulator::register","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"AluOp"],[4,"AluSrc"],[3,"Instruction"],[3,"Fields"],[3,"Semantics"],[4,"Opcode"],[4,"Format"],[4,"Function"],[3,"DataMemory"],[8,"InstructionMemory"],[3,"DisassemblyInstructionMemory"],[3,"TestInstructionMemory"],[3,"Pipeline"],[3,"IfIdRegister"],[3,"IdExRegister"],[3,"ExMemRegister"],[3,"MemWbRegister"],[3,"RegisterFile"],[3,"Register"]]};
initSearch(searchIndex);
